It is common practice to include a forgot password mechanism so that user can set new passsword 

following steps will be followed 

1.check if the users email address exists in db
2.generate random reset token 
3.send it to mail

//1.check if user exists in 

const user =await User.findOne(email:req.body.email)

if(!user) -> next -error - user with this email dosen't exists , 404


//2.Generate a random token
        //in model
        schema.methods.forgotPasswordCreateToken = function(){
        
        //creates a random reset token
        const resetToken = cyrpto.randomBytes(32).toString('hex')
        this.passwordResetToken = crypto.createHash('sha256').update(resetToken).digest('hex')
        
                                //present-time+10min *60 sec * 1000 mili sec -- to convert 10min to milisec
        this.passwordResetExpire = Date.now() + 10 *60 *1000  
        }

        return resetToken //we will send resetToken in mail but save hashed token in db for security

        //in authcontroller

        const resetToken = user.forgotPasswordCreateToken(); // this will return reset token 
        user.save({validationBeforeSave:false})

//3.Send mail to user
We will create a util so we can use it for other purpose also
    1.create transporter
    2.define mailOptions
    3.Actuall sendMail

            //Inside Utils

                npm i nodemailer

                
                const sendEmail = async(options)=>{

                        //for gmail
                
                    const transport = nodemailer.createTransport({
                        service:'gmail',
                        auth:{
                            user: usergmail@gmail.com,
                            pass:gmailPassword
                        }
                    })
                    //In your gmail settings select 'less-secure app' --daily 500 emails free
                
                //for mailtrap -- intercepts the mail for testing purpose
            transport = nodemailer.createTransport({
                host:mailtrapHost,
                port:mailtrapPort,
                auth:{
                    user:mailtrapUserName,
                    pass:mailtrapPassword
                }
            })
    
    //Define mailOptions
    const mailOptions = {
        from:Sender <senderMail@mail.com,
        to: options.email,
        subject:options.subject,
        message:options.message
    }

    await transport.sendMail(mailOptions)

    expot.module  = sendEmail;


    //In auth controller 

    import email

    const resetURL  = req.protocol// req.get('host')/api/v1/user/reset-passsword/resetToken
    const message = 'forgot email click on the url and create new password'


    try{
    await sendEmail({
        email:user.email,
        subject:'password rest token valid 10min',
        message
    })
    }catch(err){
        user.passwordResetToken = undefined;
        user.passwordResetExpire = undefined;
        user.save({validationBeforeSave:false});

        next(new AppError('there was a problem, please try again', 500)
    }















